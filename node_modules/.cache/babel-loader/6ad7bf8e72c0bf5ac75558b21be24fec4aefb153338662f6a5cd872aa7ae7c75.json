{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductList = _resolveComponent(\"ProductList\");\n  const _component_Cart = _resolveComponent(\"Cart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ProductList, {\n    onAddToCart: $options.addToCart\n  }, null, 8 /* PROPS */, [\"onAddToCart\"]), _createVNode(_component_Cart, {\n    cart: $data.cart,\n    onRemoveFromCart: $options.removeFromCart,\n    onUpdateQuantity: $options.updateQuantity\n  }, null, 8 /* PROPS */, [\"cart\", \"onRemoveFromCart\", \"onUpdateQuantity\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_ProductList","onAddToCart","$options","addToCart","_component_Cart","cart","$data","onRemoveFromCart","removeFromCart","onUpdateQuantity","updateQuantity"],"sources":["C:\\Users\\Sherlyn\\shopingcart\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <ProductList @add-to-cart=\"addToCart\" />\n    <Cart :cart=\"cart\" @remove-from-cart=\"removeFromCart\" @update-quantity=\"updateQuantity\" />\n  </div>\n</template>\n\n<script>\nimport ProductList from './components/ProductList.vue';\nimport Cart from './components/Cart.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    ProductList,\n    Cart\n  },\n  data() {\n    return {\n      cart: []\n    };\n  },\n  methods: {\n    addToCart(product) {\n      // Add product to cart\n      this.cart.push({ ...product, quantity: 1 });\n    },\n    removeFromCart(productId) {\n      // Remove product from cart\n      this.cart = this.cart.filter(item => item.id !== productId);\n    },\n    updateQuantity({ productId, quantity }) {\n      // Update quantity of product in cart\n      const productIndex = this.cart.findIndex(item => item.id === productId);\n      if (productIndex !== -1) {\n        this.cart[productIndex].quantity = quantity;\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAwCC,sBAAA;IAA1BC,WAAW,EAAEC,QAAA,CAAAC;EAAS,0CACpCJ,YAAA,CAA0FK,eAAA;IAAnFC,IAAI,EAAEC,KAAA,CAAAD,IAAI;IAAGE,gBAAgB,EAAEL,QAAA,CAAAM,cAAc;IAAGC,gBAAe,EAAEP,QAAA,CAAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}