{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductList = _resolveComponent(\"ProductList\");\n  const _component_ShoppingCart = _resolveComponent(\"ShoppingCart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ProductList, {\n    onAddToCart: $options.addToCart\n  }, null, 8 /* PROPS */, [\"onAddToCart\"]), _createVNode(_component_ShoppingCart, {\n    cart: $data.cart,\n    onUpdateQuantity: $options.updateQuantity,\n    onRemoveFromCart: $options.removeFromCart\n  }, null, 8 /* PROPS */, [\"cart\", \"onUpdateQuantity\", \"onRemoveFromCart\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_ProductList","onAddToCart","$options","addToCart","_component_ShoppingCart","cart","$data","onUpdateQuantity","updateQuantity","onRemoveFromCart","removeFromCart"],"sources":["C:\\Users\\Sherlyn\\shopingcart\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <ProductList @add-to-cart=\"addToCart\" />\n    <ShoppingCart :cart=\"cart\" @update-quantity=\"updateQuantity\" @remove-from-cart=\"removeFromCart\" />\n  </div>\n</template>\n\n<script>\nimport ShoppingCart from './components/ShoppingCart.vue';\nimport ProductList from './components/ProductList.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    ShoppingCart,\n    ProductList\n  },\n  data() {\n    return {\n      cart: []\n    };\n  },\n  methods: {\n    addToCart(product) {\n      const existingItem = this.cart.find(item => item.id === product.id);\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        this.cart.push({ ...product, quantity: 1 });\n      }\n    },\n    updateQuantity(payload) {\n      const { productId, quantity } = payload;\n      const item = this.cart.find(item => item.id === productId);\n      if (item) {\n        item.quantity = quantity;\n      }\n    },\n    removeFromCart(productId) {\n      this.cart = this.cart.filter(item => item.id !== productId);\n    }\n  }\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAwCC,sBAAA;IAA1BC,WAAW,EAAEC,QAAA,CAAAC;EAAS,0CACpCJ,YAAA,CAAkGK,uBAAA;IAAnFC,IAAI,EAAEC,KAAA,CAAAD,IAAI;IAAGE,gBAAe,EAAEL,QAAA,CAAAM,cAAc;IAAGC,gBAAgB,EAAEP,QAAA,CAAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}